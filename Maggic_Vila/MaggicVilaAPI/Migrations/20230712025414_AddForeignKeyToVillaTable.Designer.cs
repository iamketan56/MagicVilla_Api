// <auto-generated />
using System;
using MaggicVilaAPI.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace MaggicVilaAPI.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20230712025414_AddForeignKeyToVillaTable")]
    partial class AddForeignKeyToVillaTable
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("MaggicVilaAPI.Models.Villa", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Amenity")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Details")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImgUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Occupency")
                        .HasColumnType("int");

                    b.Property<int>("Sqft")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<double>("rate")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("Villas");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Amenity = "xyz",
                            CreatedDate = new DateTime(2023, 7, 12, 8, 24, 14, 62, DateTimeKind.Local).AddTicks(4281),
                            Details = "lorem lorem",
                            ImgUrl = "",
                            Name = "Royal Villa",
                            Occupency = 5,
                            Sqft = 300,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            rate = 200.0
                        },
                        new
                        {
                            Id = 2,
                            Amenity = "xyz",
                            CreatedDate = new DateTime(2023, 7, 12, 8, 24, 14, 62, DateTimeKind.Local).AddTicks(4298),
                            Details = "lorem lorem",
                            ImgUrl = "",
                            Name = "Royal Villa 1",
                            Occupency = 6,
                            Sqft = 400,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            rate = 300.0
                        },
                        new
                        {
                            Id = 3,
                            Amenity = "xyz",
                            CreatedDate = new DateTime(2023, 7, 12, 8, 24, 14, 62, DateTimeKind.Local).AddTicks(4300),
                            Details = "lorem lorem",
                            ImgUrl = "",
                            Name = "Royal Villa 2",
                            Occupency = 4,
                            Sqft = 150,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            rate = 100.0
                        },
                        new
                        {
                            Id = 4,
                            Amenity = "xyz",
                            CreatedDate = new DateTime(2023, 7, 12, 8, 24, 14, 62, DateTimeKind.Local).AddTicks(4302),
                            Details = "lorem lorem",
                            ImgUrl = "",
                            Name = "Royal Villa 3",
                            Occupency = 7,
                            Sqft = 500,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            rate = 1000.0
                        });
                });

            modelBuilder.Entity("MaggicVilaAPI.Models.VillaNumber", b =>
                {
                    b.Property<int>("VillaNo")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("SpecialDetails")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("VillaId")
                        .HasColumnType("int");

                    b.Property<DateTime>("updatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("VillaNo");

                    b.HasIndex("VillaId");

                    b.ToTable("VillasNumber");
                });

            modelBuilder.Entity("MaggicVilaAPI.Models.VillaNumber", b =>
                {
                    b.HasOne("MaggicVilaAPI.Models.Villa", "Villa")
                        .WithMany()
                        .HasForeignKey("VillaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Villa");
                });
#pragma warning restore 612, 618
        }
    }
}
